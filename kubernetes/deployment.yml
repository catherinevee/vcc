---
# kubernetes-deployment.yaml - K8s deployment with security policies
apiVersion: v1
kind: Namespace
metadata:
  name: vibe-detector
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/enforce-version: latest
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vibe-detector-sa
  namespace: vibe-detector
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vibe-detector-netpol
  namespace: vibe-detector
spec:
  podSelector:
    matchLabels:
      app: vibe-detector
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 5000
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443 # HTTPS
    - protocol: TCP
      port: 6379 # Redis
    - protocol: TCP
      port: 8200 # Vault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vibe-detector
  namespace: vibe-detector
spec:
  replicas: 3
  selector:
    matchLabels:
      app: vibe-detector
  template:
    metadata:
      labels:
        app: vibe-detector
    spec:
      serviceAccountName: vibe-detector-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: app
        image: your-registry/vibe-detector:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /home/appuser/.cache
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: vibe-detector-secrets
              key: secret-key
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: vibe-detector-secrets
              key: github-client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: vibe-detector-secrets
              key: github-client-secret
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
---
# monitoring-stack.yaml - Comprehensive monitoring
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: vibe-detector
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
    - job_name: 'vibe-detector'
      static_configs:
      - targets: ['vibe-detector:5000']
      metrics_path: '/metrics'

    - job_name: 'redis'
      static_configs:
      - targets: ['redis:9121']

    rule_files:
    - /etc/prometheus/rules/*.yml

    alerting:
      alertmanagers:
      - static_configs:
        - targets: ['alertmanager:9093']
